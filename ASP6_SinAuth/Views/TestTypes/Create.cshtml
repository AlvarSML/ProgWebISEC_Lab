@using ASP6_SinAuth.Areas.Identity.Data
@using Microsoft.AspNetCore.Identity
@model ASP6_SinAuth.Models.TestType

@inject SignInManager<User> SignInManager

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>TestType</h4>
<hr />
@if (SignInManager.IsSignedIn(User))
{
    <div class="row">
        <div class="col-md-4">
            <form asp-action="Create">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="type" class="control-label"></label>
                    <input asp-for="type" class="form-control" />
                    <span asp-validation-for="type" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="description" class="control-label"></label>
                    <input asp-for="description" class="form-control" />
                    <span asp-validation-for="description" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="price" class="control-label"></label>
                    <input asp-for="price" asp-format="{0:C}" class="form-control" />
                    <span asp-validation-for="price" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>
} else
{
    <h4>Yo have to log in first</h4>
}
<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
